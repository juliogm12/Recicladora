<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>